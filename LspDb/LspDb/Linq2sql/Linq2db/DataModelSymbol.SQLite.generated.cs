//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels.Symbols
{
	/// <summary>
	/// Database       : Symbol
	/// Data Source    : Symbol
	/// Server Version : 3.14.2
	/// </summary>
	public partial class SYMBOLDB : LinqToDB.Data.DataConnection
	{
		public ITable<CodeItemKinds> CodeItemKinds { get { return this.GetTable<CodeItemKinds>(); } }
		public ITable<CodeItems>     CodeItems     { get { return this.GetTable<CodeItems>(); } }
		public ITable<File>          Files         { get { return this.GetTable<File>(); } }

		public SYMBOLDB()
		{
			InitDataContext();
		}

		public SYMBOLDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("code_item_kinds")]
	public partial class CodeItemKinds
	{
		[Column("id"),   PrimaryKey, NotNull] public long   Id   { get; set; } // integer
		[Column("name"),             NotNull] public string Name { get; set; } // text(max)
	}

	[Table("code_items")]
	public partial class CodeItems
	{
		[Column("id"),                PrimaryKey,  NotNull] public long   Id              { get; set; } // bigint
		[Column("file_id"),                        NotNull] public long   FileId          { get; set; } // bigint
		[Column("parent_id"),                      NotNull] public long   ParentId        { get; set; } // bigint
		[Column("kind"),                           NotNull] public long   Kind            { get; set; } // integer
		[Column("name"),                           NotNull] public string Name            { get; set; } // text(max)
		[Column("type"),                 Nullable         ] public string Type            { get; set; } // text(max)
		[Column("start_column"),                   NotNull] public long   StartColumn     { get; set; } // integer
		[Column("start_line"),                     NotNull] public long   StartLine       { get; set; } // integer
		[Column("end_column"),                     NotNull] public long   EndColumn       { get; set; } // integer
		[Column("end_line"),                       NotNull] public long   EndLine         { get; set; } // integer
		[Column("name_start_column"),              NotNull] public long   NameStartColumn { get; set; } // integer
		[Column("name_start_line"),                NotNull] public long   NameStartLine   { get; set; } // integer
		[Column("name_end_column"),                NotNull] public long   NameEndColumn   { get; set; } // integer
		[Column("name_end_line"),                  NotNull] public long   NameEndLine     { get; set; } // integer
	}

	[Table("files")]
	public partial class File
	{
		[Column("id"),        PrimaryKey, NotNull] public long   Id        { get; set; } // bigint
		[Column("timestamp"),             NotNull] public long   Timestamp { get; set; } // bigint
		[Column("name"),                  NotNull] public string Name      { get; set; } // text(max)
		[Column("leaf_name"),             NotNull] public string LeafName  { get; set; } // text(max)
	}

	public static partial class TableExtensions
	{
		public static CodeItemKinds Find(this ITable<CodeItemKinds> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CodeItems Find(this ITable<CodeItems> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static File Find(this ITable<File> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
